{"ast":null,"code":"import _toConsumableArray from\"E:/WebDev/portfolio Projekte/Sliding Puzzle/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";export var TILE_COUNT=16;// change the TILE_COUNT for different sizes\nexport var GRID_SIZE=Math.sqrt(TILE_COUNT);export var BOARD_SIZE=320;// Check if solvable\nexport function isSolvable(tiles){var product=1;for(var i=1,l=TILE_COUNT-1;i<=l;i++){for(var j=i+1,m=l+1;j<=m;j++){product*=(tiles[i-1]-tiles[j-1])/(i-j);}}return Math.round(product)===1;}// check for win condition\nexport function isSolved(tiles){for(var i=0,l=tiles.length;i<l;i++){if(tiles[i]!==i){return false;}}return true;}// Get the linear index from a row/col pair.\nexport function getIndex(row,col){return parseInt(row,10)*GRID_SIZE+parseInt(col,10);}// Get the row/col pair from a linear index.\nexport function getFakePosition(index){return{row:Math.floor(index/GRID_SIZE),col:index%GRID_SIZE};}export function getVisualPosition(row,col,width,height){return{x:col*width,y:row*height};}export function shuffle(tiles){var shuffledTiles=[].concat(_toConsumableArray(tiles.filter(function(t){return t!==tiles.length-1;}).sort(function(){return Math.random()-0.5;})),[tiles.length-1]);return isSolvable(shuffledTiles)&&!isSolved(shuffledTiles)?shuffledTiles:shuffle(shuffledTiles);}// check if moveable\nexport function canSwap(srcIndex,destIndex){var _getFakePosition=getFakePosition(srcIndex),srcRow=_getFakePosition.row,srcCol=_getFakePosition.col;var _getFakePosition2=getFakePosition(destIndex),destRow=_getFakePosition2.row,destCol=_getFakePosition2.col;return Math.abs(srcRow-destRow)+Math.abs(srcCol-destCol)===1;}// swap function\nexport function swap(tiles,src,dest){var tilesResult=_toConsumableArray(tiles);var _ref=[tilesResult[dest],tilesResult[src]];tilesResult[src]=_ref[0];tilesResult[dest]=_ref[1];return tilesResult;}","map":{"version":3,"names":["TILE_COUNT","GRID_SIZE","Math","sqrt","BOARD_SIZE","isSolvable","tiles","product","i","l","j","m","round","isSolved","length","getIndex","row","col","parseInt","getFakePosition","index","floor","getVisualPosition","width","height","x","y","shuffle","shuffledTiles","filter","t","sort","random","canSwap","srcIndex","destIndex","srcRow","srcCol","destRow","destCol","abs","swap","src","dest","tilesResult"],"sources":["E:/WebDev/portfolio Projekte/Sliding Puzzle/src/helpers.js"],"sourcesContent":["export const TILE_COUNT = 16; // change the TILE_COUNT for different sizes\r\nexport const GRID_SIZE = Math.sqrt(TILE_COUNT);\r\nexport const BOARD_SIZE = 320;\r\n\r\n// Check if solvable\r\nexport function isSolvable(tiles) {\r\n  let product = 1;\r\n  for (let i = 1, l = TILE_COUNT - 1; i <= l; i++) {\r\n    for (let j = i + 1, m = l + 1; j <= m; j++) {\r\n      product *= (tiles[i - 1] - tiles[j - 1]) / (i - j);\r\n    }\r\n  }\r\n  return Math.round(product) === 1;\r\n}\r\n\r\n// check for win condition\r\nexport function isSolved(tiles) {\r\n  for (let i = 0, l = tiles.length; i < l; i++) {\r\n    if (tiles[i] !== i) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n// Get the linear index from a row/col pair.\r\nexport function getIndex(row, col) {\r\n  return parseInt(row, 10) * GRID_SIZE + parseInt(col, 10);\r\n}\r\n\r\n// Get the row/col pair from a linear index.\r\nexport function getFakePosition(index) {\r\n  return {\r\n    row: Math.floor(index / GRID_SIZE),\r\n    col: index % GRID_SIZE,\r\n  };\r\n}\r\n\r\nexport function getVisualPosition(row, col, width, height) {\r\n  return {\r\n    x: col * width,\r\n    y: row * height,\r\n  };\r\n}\r\n\r\nexport function shuffle(tiles) {\r\n  const shuffledTiles = [\r\n    ...tiles\r\n      .filter((t) => t !== tiles.length - 1)\r\n      .sort(() => Math.random() - 0.5),\r\n    tiles.length - 1,\r\n  ];\r\n  return isSolvable(shuffledTiles) && !isSolved(shuffledTiles)\r\n    ? shuffledTiles\r\n    : shuffle(shuffledTiles);\r\n}\r\n\r\n// check if moveable\r\nexport function canSwap(srcIndex, destIndex) {\r\n  const { row: srcRow, col: srcCol } = getFakePosition(srcIndex);\r\n  const { row: destRow, col: destCol } = getFakePosition(destIndex);\r\n  return Math.abs(srcRow - destRow) + Math.abs(srcCol - destCol) === 1;\r\n}\r\n\r\n// swap function\r\nexport function swap(tiles, src, dest) {\r\n  const tilesResult = [...tiles];\r\n  [tilesResult[src], tilesResult[dest]] = [tilesResult[dest], tilesResult[src]];\r\n  return tilesResult;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}